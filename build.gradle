apply plugin: 'cpp'

String osInclude = '/usr/inlude'

String qx(String... command) {
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine = command
		standardOutput = stdout
	}
	//println "Output: $stdout"
	return stdout
}

String[] pkgConfig(String opt, List<String> pkgs) {
	return qx('pkg-config', *pkgs, "--${opt}").split("\\s")
}

String[] pkgCFlags(List<String> pkgs) {
	return pkgConfig('cflags', pkgs)
}

String[] pkgLibs(List<String> pkgs) {
	return pkgConfig('libs', pkgs)
}

model {
	components {
		main(NativeExecutableSpec) {
			def requiredPackages = ['fuse']
			
			binaries.withType(NativeBinarySpec) {
				if(toolChain in Gcc) {
					def cFlags = pkgCFlags(requiredPackages)
					cppCompiler.args(cFlags)
					cCompiler.args(cFlags)
					linker.args(pkgLibs(requiredPackages))
				}
			}
			
		}
	}
}